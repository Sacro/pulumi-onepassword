# coding=utf-8
# *** WARNING: this file was generated by Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['CreditCardArgs', 'CreditCard']

@pulumi.input_type
class CreditCardArgs:
    def __init__(__self__, *,
                 additional_details: Optional[Any] = None,
                 cardholder_name: Optional[pulumi.Input[str]] = None,
                 contact_information: Optional[Any] = None,
                 expiry_date: Optional[pulumi.Input[str]] = None,
                 notes: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 valid_from: Optional[pulumi.Input[str]] = None,
                 verification_number: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a CreditCard resource.
        """
        if additional_details is not None:
            pulumi.set(__self__, "additional_details", additional_details)
        if cardholder_name is not None:
            pulumi.set(__self__, "cardholder_name", cardholder_name)
        if contact_information is not None:
            pulumi.set(__self__, "contact_information", contact_information)
        if expiry_date is not None:
            pulumi.set(__self__, "expiry_date", expiry_date)
        if notes is not None:
            pulumi.set(__self__, "notes", notes)
        if number is not None:
            pulumi.set(__self__, "number", number)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if valid_from is not None:
            pulumi.set(__self__, "valid_from", valid_from)
        if verification_number is not None:
            pulumi.set(__self__, "verification_number", verification_number)

    @property
    @pulumi.getter(name="additionalDetails")
    def additional_details(self) -> Optional[Any]:
        return pulumi.get(self, "additional_details")

    @additional_details.setter
    def additional_details(self, value: Optional[Any]):
        pulumi.set(self, "additional_details", value)

    @property
    @pulumi.getter(name="cardholderName")
    def cardholder_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "cardholder_name")

    @cardholder_name.setter
    def cardholder_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "cardholder_name", value)

    @property
    @pulumi.getter(name="contactInformation")
    def contact_information(self) -> Optional[Any]:
        return pulumi.get(self, "contact_information")

    @contact_information.setter
    def contact_information(self, value: Optional[Any]):
        pulumi.set(self, "contact_information", value)

    @property
    @pulumi.getter(name="expiryDate")
    def expiry_date(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "expiry_date")

    @expiry_date.setter
    def expiry_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "expiry_date", value)

    @property
    @pulumi.getter
    def notes(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "notes")

    @notes.setter
    def notes(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "notes", value)

    @property
    @pulumi.getter
    def number(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "number")

    @number.setter
    def number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "number", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="validFrom")
    def valid_from(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "valid_from")

    @valid_from.setter
    def valid_from(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "valid_from", value)

    @property
    @pulumi.getter(name="verificationNumber")
    def verification_number(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "verification_number")

    @verification_number.setter
    def verification_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verification_number", value)


class CreditCard(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 additional_details: Optional[Any] = None,
                 cardholder_name: Optional[pulumi.Input[str]] = None,
                 contact_information: Optional[Any] = None,
                 expiry_date: Optional[pulumi.Input[str]] = None,
                 notes: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 valid_from: Optional[pulumi.Input[str]] = None,
                 verification_number: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a CreditCard resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[CreditCardArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a CreditCard resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param CreditCardArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CreditCardArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 additional_details: Optional[Any] = None,
                 cardholder_name: Optional[pulumi.Input[str]] = None,
                 contact_information: Optional[Any] = None,
                 expiry_date: Optional[pulumi.Input[str]] = None,
                 notes: Optional[pulumi.Input[str]] = None,
                 number: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 valid_from: Optional[pulumi.Input[str]] = None,
                 verification_number: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CreditCardArgs.__new__(CreditCardArgs)

            __props__.__dict__["additional_details"] = additional_details
            __props__.__dict__["cardholder_name"] = cardholder_name
            __props__.__dict__["contact_information"] = contact_information
            __props__.__dict__["expiry_date"] = expiry_date
            __props__.__dict__["notes"] = notes
            __props__.__dict__["number"] = number
            __props__.__dict__["type"] = type
            __props__.__dict__["valid_from"] = valid_from
            __props__.__dict__["verification_number"] = verification_number
        super(CreditCard, __self__).__init__(
            'onepassword:index:CreditCard',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'CreditCard':
        """
        Get an existing CreditCard resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = CreditCardArgs.__new__(CreditCardArgs)

        return CreditCard(resource_name, opts=opts, __props__=__props__)

