# coding=utf-8
# *** WARNING: this file was generated by Pulumi SDK Generator. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetField',
    'GetSection',
]

@pulumi.output_type
class GetField(dict):
    def __init__(__self__, *,
                 label: str,
                 purpose: 'FieldPurpose',
                 uuid: str,
                 value: str,
                 reference: Optional[str] = None):
        pulumi.set(__self__, "label", label)
        pulumi.set(__self__, "purpose", purpose)
        pulumi.set(__self__, "uuid", uuid)
        pulumi.set(__self__, "value", value)
        if reference is not None:
            pulumi.set(__self__, "reference", reference)

    @property
    @pulumi.getter
    def label(self) -> str:
        return pulumi.get(self, "label")

    @property
    @pulumi.getter
    def purpose(self) -> 'FieldPurpose':
        return pulumi.get(self, "purpose")

    @property
    @pulumi.getter
    def uuid(self) -> str:
        return pulumi.get(self, "uuid")

    @property
    @pulumi.getter
    def value(self) -> str:
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def reference(self) -> Optional[str]:
        return pulumi.get(self, "reference")


@pulumi.output_type
class GetSection(dict):
    def __init__(__self__, *,
                 fields: Mapping[str, 'outputs.GetField'],
                 label: str,
                 uuid: str):
        pulumi.set(__self__, "fields", fields)
        pulumi.set(__self__, "label", label)
        pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter
    def fields(self) -> Mapping[str, 'outputs.GetField']:
        return pulumi.get(self, "fields")

    @property
    @pulumi.getter
    def label(self) -> str:
        return pulumi.get(self, "label")

    @property
    @pulumi.getter
    def uuid(self) -> str:
        return pulumi.get(self, "uuid")


