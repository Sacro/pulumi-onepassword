// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package server

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AdminConsole struct {
	AdminConsoleUrl      *string `pulumi:"adminConsoleUrl"`
	AdminConsoleUsername *string `pulumi:"adminConsoleUsername"`
	ConsolePassword      *string `pulumi:"consolePassword"`
}

// AdminConsoleInput is an input type that accepts AdminConsoleArgs and AdminConsoleOutput values.
// You can construct a concrete instance of `AdminConsoleInput` via:
//
//	AdminConsoleArgs{...}
type AdminConsoleInput interface {
	pulumi.Input

	ToAdminConsoleOutput() AdminConsoleOutput
	ToAdminConsoleOutputWithContext(context.Context) AdminConsoleOutput
}

type AdminConsoleArgs struct {
	AdminConsoleUrl      pulumi.StringPtrInput `pulumi:"adminConsoleUrl"`
	AdminConsoleUsername pulumi.StringPtrInput `pulumi:"adminConsoleUsername"`
	ConsolePassword      pulumi.StringPtrInput `pulumi:"consolePassword"`
}

func (AdminConsoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminConsole)(nil)).Elem()
}

func (i AdminConsoleArgs) ToAdminConsoleOutput() AdminConsoleOutput {
	return i.ToAdminConsoleOutputWithContext(context.Background())
}

func (i AdminConsoleArgs) ToAdminConsoleOutputWithContext(ctx context.Context) AdminConsoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminConsoleOutput)
}

func (i AdminConsoleArgs) ToAdminConsolePtrOutput() AdminConsolePtrOutput {
	return i.ToAdminConsolePtrOutputWithContext(context.Background())
}

func (i AdminConsoleArgs) ToAdminConsolePtrOutputWithContext(ctx context.Context) AdminConsolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminConsoleOutput).ToAdminConsolePtrOutputWithContext(ctx)
}

// AdminConsolePtrInput is an input type that accepts AdminConsoleArgs, AdminConsolePtr and AdminConsolePtrOutput values.
// You can construct a concrete instance of `AdminConsolePtrInput` via:
//
//	        AdminConsoleArgs{...}
//
//	or:
//
//	        nil
type AdminConsolePtrInput interface {
	pulumi.Input

	ToAdminConsolePtrOutput() AdminConsolePtrOutput
	ToAdminConsolePtrOutputWithContext(context.Context) AdminConsolePtrOutput
}

type adminConsolePtrType AdminConsoleArgs

func AdminConsolePtr(v *AdminConsoleArgs) AdminConsolePtrInput {
	return (*adminConsolePtrType)(v)
}

func (*adminConsolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminConsole)(nil)).Elem()
}

func (i *adminConsolePtrType) ToAdminConsolePtrOutput() AdminConsolePtrOutput {
	return i.ToAdminConsolePtrOutputWithContext(context.Background())
}

func (i *adminConsolePtrType) ToAdminConsolePtrOutputWithContext(ctx context.Context) AdminConsolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdminConsolePtrOutput)
}

type AdminConsoleOutput struct{ *pulumi.OutputState }

func (AdminConsoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AdminConsole)(nil)).Elem()
}

func (o AdminConsoleOutput) ToAdminConsoleOutput() AdminConsoleOutput {
	return o
}

func (o AdminConsoleOutput) ToAdminConsoleOutputWithContext(ctx context.Context) AdminConsoleOutput {
	return o
}

func (o AdminConsoleOutput) ToAdminConsolePtrOutput() AdminConsolePtrOutput {
	return o.ToAdminConsolePtrOutputWithContext(context.Background())
}

func (o AdminConsoleOutput) ToAdminConsolePtrOutputWithContext(ctx context.Context) AdminConsolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AdminConsole) *AdminConsole {
		return &v
	}).(AdminConsolePtrOutput)
}

func (o AdminConsoleOutput) AdminConsoleUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminConsole) *string { return v.AdminConsoleUrl }).(pulumi.StringPtrOutput)
}

func (o AdminConsoleOutput) AdminConsoleUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminConsole) *string { return v.AdminConsoleUsername }).(pulumi.StringPtrOutput)
}

func (o AdminConsoleOutput) ConsolePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AdminConsole) *string { return v.ConsolePassword }).(pulumi.StringPtrOutput)
}

type AdminConsolePtrOutput struct{ *pulumi.OutputState }

func (AdminConsolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdminConsole)(nil)).Elem()
}

func (o AdminConsolePtrOutput) ToAdminConsolePtrOutput() AdminConsolePtrOutput {
	return o
}

func (o AdminConsolePtrOutput) ToAdminConsolePtrOutputWithContext(ctx context.Context) AdminConsolePtrOutput {
	return o
}

func (o AdminConsolePtrOutput) Elem() AdminConsoleOutput {
	return o.ApplyT(func(v *AdminConsole) AdminConsole {
		if v != nil {
			return *v
		}
		var ret AdminConsole
		return ret
	}).(AdminConsoleOutput)
}

func (o AdminConsolePtrOutput) AdminConsoleUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminConsole) *string {
		if v == nil {
			return nil
		}
		return v.AdminConsoleUrl
	}).(pulumi.StringPtrOutput)
}

func (o AdminConsolePtrOutput) AdminConsoleUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminConsole) *string {
		if v == nil {
			return nil
		}
		return v.AdminConsoleUsername
	}).(pulumi.StringPtrOutput)
}

func (o AdminConsolePtrOutput) ConsolePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AdminConsole) *string {
		if v == nil {
			return nil
		}
		return v.ConsolePassword
	}).(pulumi.StringPtrOutput)
}

type HostingProvider struct {
	Name         *string `pulumi:"name"`
	SupportPhone *string `pulumi:"supportPhone"`
	SupportUrl   *string `pulumi:"supportUrl"`
	Website      *string `pulumi:"website"`
}

// HostingProviderInput is an input type that accepts HostingProviderArgs and HostingProviderOutput values.
// You can construct a concrete instance of `HostingProviderInput` via:
//
//	HostingProviderArgs{...}
type HostingProviderInput interface {
	pulumi.Input

	ToHostingProviderOutput() HostingProviderOutput
	ToHostingProviderOutputWithContext(context.Context) HostingProviderOutput
}

type HostingProviderArgs struct {
	Name         pulumi.StringPtrInput `pulumi:"name"`
	SupportPhone pulumi.StringPtrInput `pulumi:"supportPhone"`
	SupportUrl   pulumi.StringPtrInput `pulumi:"supportUrl"`
	Website      pulumi.StringPtrInput `pulumi:"website"`
}

func (HostingProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingProvider)(nil)).Elem()
}

func (i HostingProviderArgs) ToHostingProviderOutput() HostingProviderOutput {
	return i.ToHostingProviderOutputWithContext(context.Background())
}

func (i HostingProviderArgs) ToHostingProviderOutputWithContext(ctx context.Context) HostingProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingProviderOutput)
}

func (i HostingProviderArgs) ToHostingProviderPtrOutput() HostingProviderPtrOutput {
	return i.ToHostingProviderPtrOutputWithContext(context.Background())
}

func (i HostingProviderArgs) ToHostingProviderPtrOutputWithContext(ctx context.Context) HostingProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingProviderOutput).ToHostingProviderPtrOutputWithContext(ctx)
}

// HostingProviderPtrInput is an input type that accepts HostingProviderArgs, HostingProviderPtr and HostingProviderPtrOutput values.
// You can construct a concrete instance of `HostingProviderPtrInput` via:
//
//	        HostingProviderArgs{...}
//
//	or:
//
//	        nil
type HostingProviderPtrInput interface {
	pulumi.Input

	ToHostingProviderPtrOutput() HostingProviderPtrOutput
	ToHostingProviderPtrOutputWithContext(context.Context) HostingProviderPtrOutput
}

type hostingProviderPtrType HostingProviderArgs

func HostingProviderPtr(v *HostingProviderArgs) HostingProviderPtrInput {
	return (*hostingProviderPtrType)(v)
}

func (*hostingProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingProvider)(nil)).Elem()
}

func (i *hostingProviderPtrType) ToHostingProviderPtrOutput() HostingProviderPtrOutput {
	return i.ToHostingProviderPtrOutputWithContext(context.Background())
}

func (i *hostingProviderPtrType) ToHostingProviderPtrOutputWithContext(ctx context.Context) HostingProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostingProviderPtrOutput)
}

type HostingProviderOutput struct{ *pulumi.OutputState }

func (HostingProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostingProvider)(nil)).Elem()
}

func (o HostingProviderOutput) ToHostingProviderOutput() HostingProviderOutput {
	return o
}

func (o HostingProviderOutput) ToHostingProviderOutputWithContext(ctx context.Context) HostingProviderOutput {
	return o
}

func (o HostingProviderOutput) ToHostingProviderPtrOutput() HostingProviderPtrOutput {
	return o.ToHostingProviderPtrOutputWithContext(context.Background())
}

func (o HostingProviderOutput) ToHostingProviderPtrOutputWithContext(ctx context.Context) HostingProviderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostingProvider) *HostingProvider {
		return &v
	}).(HostingProviderPtrOutput)
}

func (o HostingProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingProvider) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o HostingProviderOutput) SupportPhone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingProvider) *string { return v.SupportPhone }).(pulumi.StringPtrOutput)
}

func (o HostingProviderOutput) SupportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingProvider) *string { return v.SupportUrl }).(pulumi.StringPtrOutput)
}

func (o HostingProviderOutput) Website() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostingProvider) *string { return v.Website }).(pulumi.StringPtrOutput)
}

type HostingProviderPtrOutput struct{ *pulumi.OutputState }

func (HostingProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostingProvider)(nil)).Elem()
}

func (o HostingProviderPtrOutput) ToHostingProviderPtrOutput() HostingProviderPtrOutput {
	return o
}

func (o HostingProviderPtrOutput) ToHostingProviderPtrOutputWithContext(ctx context.Context) HostingProviderPtrOutput {
	return o
}

func (o HostingProviderPtrOutput) Elem() HostingProviderOutput {
	return o.ApplyT(func(v *HostingProvider) HostingProvider {
		if v != nil {
			return *v
		}
		var ret HostingProvider
		return ret
	}).(HostingProviderOutput)
}

func (o HostingProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingProvider) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o HostingProviderPtrOutput) SupportPhone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingProvider) *string {
		if v == nil {
			return nil
		}
		return v.SupportPhone
	}).(pulumi.StringPtrOutput)
}

func (o HostingProviderPtrOutput) SupportUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingProvider) *string {
		if v == nil {
			return nil
		}
		return v.SupportUrl
	}).(pulumi.StringPtrOutput)
}

func (o HostingProviderPtrOutput) Website() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostingProvider) *string {
		if v == nil {
			return nil
		}
		return v.Website
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdminConsoleInput)(nil)).Elem(), AdminConsoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdminConsolePtrInput)(nil)).Elem(), AdminConsoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingProviderInput)(nil)).Elem(), HostingProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostingProviderPtrInput)(nil)).Elem(), HostingProviderArgs{})
	pulumi.RegisterOutputType(AdminConsoleOutput{})
	pulumi.RegisterOutputType(AdminConsolePtrOutput{})
	pulumi.RegisterOutputType(HostingProviderOutput{})
	pulumi.RegisterOutputType(HostingProviderPtrOutput{})
}
