// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SocialSecurityNumber struct {
	pulumi.CustomResourceState

	Category pulumi.StringOutput    `pulumi:"category"`
	Fields   GetFieldArrayOutput    `pulumi:"fields"`
	Id       pulumi.StringOutput    `pulumi:"id"`
	Name     pulumi.StringPtrOutput `pulumi:"name"`
	Notes    pulumi.StringPtrOutput `pulumi:"notes"`
	Number   pulumi.StringPtrOutput `pulumi:"number"`
	Sections GetSectionArrayOutput  `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The title of the item.
	Title pulumi.StringOutput `pulumi:"title"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid pulumi.StringOutput `pulumi:"uuid"`
	// The UUID of the vault the item is in.
	Vault pulumi.StringOutput `pulumi:"vault"`
}

// NewSocialSecurityNumber registers a new resource with the given unique name, arguments, and options.
func NewSocialSecurityNumber(ctx *pulumi.Context,
	name string, args *SocialSecurityNumberArgs, opts ...pulumi.ResourceOption) (*SocialSecurityNumber, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	if args.Vault == nil {
		return nil, errors.New("invalid value for required argument 'Vault'")
	}
	var resource SocialSecurityNumber
	err := ctx.RegisterResource("onepassword:index:SocialSecurityNumber", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSocialSecurityNumber gets an existing SocialSecurityNumber resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSocialSecurityNumber(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SocialSecurityNumberState, opts ...pulumi.ResourceOption) (*SocialSecurityNumber, error) {
	var resource SocialSecurityNumber
	err := ctx.ReadResource("onepassword:index:SocialSecurityNumber", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SocialSecurityNumber resources.
type socialSecurityNumberState struct {
}

type SocialSecurityNumberState struct {
}

func (SocialSecurityNumberState) ElementType() reflect.Type {
	return reflect.TypeOf((*socialSecurityNumberState)(nil)).Elem()
}

type socialSecurityNumberArgs struct {
	Fields   []Field   `pulumi:"fields"`
	Name     *string   `pulumi:"name"`
	Notes    *string   `pulumi:"notes"`
	Number   *string   `pulumi:"number"`
	Sections []Section `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags []string `pulumi:"tags"`
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title string `pulumi:"title"`
	// The UUID of the vault the item is in.
	Vault string `pulumi:"vault"`
}

// The set of arguments for constructing a SocialSecurityNumber resource.
type SocialSecurityNumberArgs struct {
	Fields   FieldArrayInput
	Name     pulumi.StringPtrInput
	Notes    pulumi.StringPtrInput
	Number   pulumi.StringPtrInput
	Sections SectionArrayInput
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayInput
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title pulumi.StringInput
	// The UUID of the vault the item is in.
	Vault pulumi.StringInput
}

func (SocialSecurityNumberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*socialSecurityNumberArgs)(nil)).Elem()
}

type SocialSecurityNumberInput interface {
	pulumi.Input

	ToSocialSecurityNumberOutput() SocialSecurityNumberOutput
	ToSocialSecurityNumberOutputWithContext(ctx context.Context) SocialSecurityNumberOutput
}

func (*SocialSecurityNumber) ElementType() reflect.Type {
	return reflect.TypeOf((**SocialSecurityNumber)(nil)).Elem()
}

func (i *SocialSecurityNumber) ToSocialSecurityNumberOutput() SocialSecurityNumberOutput {
	return i.ToSocialSecurityNumberOutputWithContext(context.Background())
}

func (i *SocialSecurityNumber) ToSocialSecurityNumberOutputWithContext(ctx context.Context) SocialSecurityNumberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialSecurityNumberOutput)
}

// SocialSecurityNumberArrayInput is an input type that accepts SocialSecurityNumberArray and SocialSecurityNumberArrayOutput values.
// You can construct a concrete instance of `SocialSecurityNumberArrayInput` via:
//
//	SocialSecurityNumberArray{ SocialSecurityNumberArgs{...} }
type SocialSecurityNumberArrayInput interface {
	pulumi.Input

	ToSocialSecurityNumberArrayOutput() SocialSecurityNumberArrayOutput
	ToSocialSecurityNumberArrayOutputWithContext(context.Context) SocialSecurityNumberArrayOutput
}

type SocialSecurityNumberArray []SocialSecurityNumberInput

func (SocialSecurityNumberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SocialSecurityNumber)(nil)).Elem()
}

func (i SocialSecurityNumberArray) ToSocialSecurityNumberArrayOutput() SocialSecurityNumberArrayOutput {
	return i.ToSocialSecurityNumberArrayOutputWithContext(context.Background())
}

func (i SocialSecurityNumberArray) ToSocialSecurityNumberArrayOutputWithContext(ctx context.Context) SocialSecurityNumberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialSecurityNumberArrayOutput)
}

// SocialSecurityNumberMapInput is an input type that accepts SocialSecurityNumberMap and SocialSecurityNumberMapOutput values.
// You can construct a concrete instance of `SocialSecurityNumberMapInput` via:
//
//	SocialSecurityNumberMap{ "key": SocialSecurityNumberArgs{...} }
type SocialSecurityNumberMapInput interface {
	pulumi.Input

	ToSocialSecurityNumberMapOutput() SocialSecurityNumberMapOutput
	ToSocialSecurityNumberMapOutputWithContext(context.Context) SocialSecurityNumberMapOutput
}

type SocialSecurityNumberMap map[string]SocialSecurityNumberInput

func (SocialSecurityNumberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SocialSecurityNumber)(nil)).Elem()
}

func (i SocialSecurityNumberMap) ToSocialSecurityNumberMapOutput() SocialSecurityNumberMapOutput {
	return i.ToSocialSecurityNumberMapOutputWithContext(context.Background())
}

func (i SocialSecurityNumberMap) ToSocialSecurityNumberMapOutputWithContext(ctx context.Context) SocialSecurityNumberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SocialSecurityNumberMapOutput)
}

type SocialSecurityNumberOutput struct{ *pulumi.OutputState }

func (SocialSecurityNumberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SocialSecurityNumber)(nil)).Elem()
}

func (o SocialSecurityNumberOutput) ToSocialSecurityNumberOutput() SocialSecurityNumberOutput {
	return o
}

func (o SocialSecurityNumberOutput) ToSocialSecurityNumberOutputWithContext(ctx context.Context) SocialSecurityNumberOutput {
	return o
}

type SocialSecurityNumberArrayOutput struct{ *pulumi.OutputState }

func (SocialSecurityNumberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SocialSecurityNumber)(nil)).Elem()
}

func (o SocialSecurityNumberArrayOutput) ToSocialSecurityNumberArrayOutput() SocialSecurityNumberArrayOutput {
	return o
}

func (o SocialSecurityNumberArrayOutput) ToSocialSecurityNumberArrayOutputWithContext(ctx context.Context) SocialSecurityNumberArrayOutput {
	return o
}

func (o SocialSecurityNumberArrayOutput) Index(i pulumi.IntInput) SocialSecurityNumberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SocialSecurityNumber {
		return vs[0].([]*SocialSecurityNumber)[vs[1].(int)]
	}).(SocialSecurityNumberOutput)
}

type SocialSecurityNumberMapOutput struct{ *pulumi.OutputState }

func (SocialSecurityNumberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SocialSecurityNumber)(nil)).Elem()
}

func (o SocialSecurityNumberMapOutput) ToSocialSecurityNumberMapOutput() SocialSecurityNumberMapOutput {
	return o
}

func (o SocialSecurityNumberMapOutput) ToSocialSecurityNumberMapOutputWithContext(ctx context.Context) SocialSecurityNumberMapOutput {
	return o
}

func (o SocialSecurityNumberMapOutput) MapIndex(k pulumi.StringInput) SocialSecurityNumberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SocialSecurityNumber {
		return vs[0].(map[string]*SocialSecurityNumber)[vs[1].(string)]
	}).(SocialSecurityNumberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SocialSecurityNumberInput)(nil)).Elem(), &SocialSecurityNumber{})
	pulumi.RegisterInputType(reflect.TypeOf((*SocialSecurityNumberArrayInput)(nil)).Elem(), SocialSecurityNumberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SocialSecurityNumberMapInput)(nil)).Elem(), SocialSecurityNumberMap{})
	pulumi.RegisterOutputType(SocialSecurityNumberOutput{})
	pulumi.RegisterOutputType(SocialSecurityNumberArrayOutput{})
	pulumi.RegisterOutputType(SocialSecurityNumberMapOutput{})
}
