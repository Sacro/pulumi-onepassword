// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-onepassword/sdk/go/onepassword/creditcard"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CreditCard struct {
	pulumi.CustomResourceState

	AdditionalDetails  creditcard.AdditionalDetailsPtrOutput  `pulumi:"additionalDetails"`
	CardholderName     pulumi.StringPtrOutput                 `pulumi:"cardholderName"`
	Category           pulumi.StringOutput                    `pulumi:"category"`
	ContactInformation creditcard.ContactInformationPtrOutput `pulumi:"contactInformation"`
	ExpiryDate         pulumi.StringPtrOutput                 `pulumi:"expiryDate"`
	Fields             GetFieldArrayOutput                    `pulumi:"fields"`
	Id                 pulumi.StringOutput                    `pulumi:"id"`
	Notes              pulumi.StringPtrOutput                 `pulumi:"notes"`
	Number             pulumi.StringPtrOutput                 `pulumi:"number"`
	Sections           GetSectionArrayOutput                  `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The title of the item.
	Title pulumi.StringOutput    `pulumi:"title"`
	Type  pulumi.StringPtrOutput `pulumi:"type"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid      pulumi.StringOutput    `pulumi:"uuid"`
	ValidFrom pulumi.StringPtrOutput `pulumi:"validFrom"`
	// The UUID of the vault the item is in.
	Vault              pulumi.StringOutput    `pulumi:"vault"`
	VerificationNumber pulumi.StringPtrOutput `pulumi:"verificationNumber"`
}

// NewCreditCard registers a new resource with the given unique name, arguments, and options.
func NewCreditCard(ctx *pulumi.Context,
	name string, args *CreditCardArgs, opts ...pulumi.ResourceOption) (*CreditCard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	if args.Vault == nil {
		return nil, errors.New("invalid value for required argument 'Vault'")
	}
	if isZero(args.Category) {
		args.Category = pulumi.String("Item")
	}
	var resource CreditCard
	err := ctx.RegisterResource("onepassword:index:CreditCard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCreditCard gets an existing CreditCard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCreditCard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CreditCardState, opts ...pulumi.ResourceOption) (*CreditCard, error) {
	var resource CreditCard
	err := ctx.ReadResource("onepassword:index:CreditCard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CreditCard resources.
type creditCardState struct {
}

type CreditCardState struct {
}

func (CreditCardState) ElementType() reflect.Type {
	return reflect.TypeOf((*creditCardState)(nil)).Elem()
}

type creditCardArgs struct {
	AdditionalDetails  *creditcard.AdditionalDetails  `pulumi:"additionalDetails"`
	CardholderName     *string                        `pulumi:"cardholderName"`
	Category           string                         `pulumi:"category"`
	ContactInformation *creditcard.ContactInformation `pulumi:"contactInformation"`
	ExpiryDate         *string                        `pulumi:"expiryDate"`
	Fields             []Field                        `pulumi:"fields"`
	Notes              *string                        `pulumi:"notes"`
	Number             *string                        `pulumi:"number"`
	Sections           []Section                      `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags []string `pulumi:"tags"`
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title     string  `pulumi:"title"`
	Type      *string `pulumi:"type"`
	ValidFrom *string `pulumi:"validFrom"`
	// The UUID of the vault the item is in.
	Vault              string  `pulumi:"vault"`
	VerificationNumber *string `pulumi:"verificationNumber"`
}

// The set of arguments for constructing a CreditCard resource.
type CreditCardArgs struct {
	AdditionalDetails  creditcard.AdditionalDetailsPtrInput
	CardholderName     pulumi.StringPtrInput
	Category           pulumi.StringInput
	ContactInformation creditcard.ContactInformationPtrInput
	ExpiryDate         pulumi.StringPtrInput
	Fields             FieldArrayInput
	Notes              pulumi.StringPtrInput
	Number             pulumi.StringPtrInput
	Sections           SectionArrayInput
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayInput
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title     pulumi.StringInput
	Type      pulumi.StringPtrInput
	ValidFrom pulumi.StringPtrInput
	// The UUID of the vault the item is in.
	Vault              pulumi.StringInput
	VerificationNumber pulumi.StringPtrInput
}

func (CreditCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*creditCardArgs)(nil)).Elem()
}

type CreditCardInput interface {
	pulumi.Input

	ToCreditCardOutput() CreditCardOutput
	ToCreditCardOutputWithContext(ctx context.Context) CreditCardOutput
}

func (*CreditCard) ElementType() reflect.Type {
	return reflect.TypeOf((**CreditCard)(nil)).Elem()
}

func (i *CreditCard) ToCreditCardOutput() CreditCardOutput {
	return i.ToCreditCardOutputWithContext(context.Background())
}

func (i *CreditCard) ToCreditCardOutputWithContext(ctx context.Context) CreditCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreditCardOutput)
}

// CreditCardArrayInput is an input type that accepts CreditCardArray and CreditCardArrayOutput values.
// You can construct a concrete instance of `CreditCardArrayInput` via:
//
//	CreditCardArray{ CreditCardArgs{...} }
type CreditCardArrayInput interface {
	pulumi.Input

	ToCreditCardArrayOutput() CreditCardArrayOutput
	ToCreditCardArrayOutputWithContext(context.Context) CreditCardArrayOutput
}

type CreditCardArray []CreditCardInput

func (CreditCardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CreditCard)(nil)).Elem()
}

func (i CreditCardArray) ToCreditCardArrayOutput() CreditCardArrayOutput {
	return i.ToCreditCardArrayOutputWithContext(context.Background())
}

func (i CreditCardArray) ToCreditCardArrayOutputWithContext(ctx context.Context) CreditCardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreditCardArrayOutput)
}

// CreditCardMapInput is an input type that accepts CreditCardMap and CreditCardMapOutput values.
// You can construct a concrete instance of `CreditCardMapInput` via:
//
//	CreditCardMap{ "key": CreditCardArgs{...} }
type CreditCardMapInput interface {
	pulumi.Input

	ToCreditCardMapOutput() CreditCardMapOutput
	ToCreditCardMapOutputWithContext(context.Context) CreditCardMapOutput
}

type CreditCardMap map[string]CreditCardInput

func (CreditCardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CreditCard)(nil)).Elem()
}

func (i CreditCardMap) ToCreditCardMapOutput() CreditCardMapOutput {
	return i.ToCreditCardMapOutputWithContext(context.Background())
}

func (i CreditCardMap) ToCreditCardMapOutputWithContext(ctx context.Context) CreditCardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreditCardMapOutput)
}

type CreditCardOutput struct{ *pulumi.OutputState }

func (CreditCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreditCard)(nil)).Elem()
}

func (o CreditCardOutput) ToCreditCardOutput() CreditCardOutput {
	return o
}

func (o CreditCardOutput) ToCreditCardOutputWithContext(ctx context.Context) CreditCardOutput {
	return o
}

type CreditCardArrayOutput struct{ *pulumi.OutputState }

func (CreditCardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CreditCard)(nil)).Elem()
}

func (o CreditCardArrayOutput) ToCreditCardArrayOutput() CreditCardArrayOutput {
	return o
}

func (o CreditCardArrayOutput) ToCreditCardArrayOutputWithContext(ctx context.Context) CreditCardArrayOutput {
	return o
}

func (o CreditCardArrayOutput) Index(i pulumi.IntInput) CreditCardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CreditCard {
		return vs[0].([]*CreditCard)[vs[1].(int)]
	}).(CreditCardOutput)
}

type CreditCardMapOutput struct{ *pulumi.OutputState }

func (CreditCardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CreditCard)(nil)).Elem()
}

func (o CreditCardMapOutput) ToCreditCardMapOutput() CreditCardMapOutput {
	return o
}

func (o CreditCardMapOutput) ToCreditCardMapOutputWithContext(ctx context.Context) CreditCardMapOutput {
	return o
}

func (o CreditCardMapOutput) MapIndex(k pulumi.StringInput) CreditCardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CreditCard {
		return vs[0].(map[string]*CreditCard)[vs[1].(string)]
	}).(CreditCardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CreditCardInput)(nil)).Elem(), &CreditCard{})
	pulumi.RegisterInputType(reflect.TypeOf((*CreditCardArrayInput)(nil)).Elem(), CreditCardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CreditCardMapInput)(nil)).Elem(), CreditCardMap{})
	pulumi.RegisterOutputType(CreditCardOutput{})
	pulumi.RegisterOutputType(CreditCardArrayOutput{})
	pulumi.RegisterOutputType(CreditCardMapOutput{})
}
