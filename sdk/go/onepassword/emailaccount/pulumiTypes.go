// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emailaccount

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContactInformation struct {
	PhoneLocal       *string `pulumi:"phoneLocal"`
	PhoneTollFree    *string `pulumi:"phoneTollFree"`
	Provider         *string `pulumi:"provider"`
	ProvidersWebsite *string `pulumi:"providersWebsite"`
}

// ContactInformationInput is an input type that accepts ContactInformationArgs and ContactInformationOutput values.
// You can construct a concrete instance of `ContactInformationInput` via:
//
//	ContactInformationArgs{...}
type ContactInformationInput interface {
	pulumi.Input

	ToContactInformationOutput() ContactInformationOutput
	ToContactInformationOutputWithContext(context.Context) ContactInformationOutput
}

type ContactInformationArgs struct {
	PhoneLocal       pulumi.StringPtrInput `pulumi:"phoneLocal"`
	PhoneTollFree    pulumi.StringPtrInput `pulumi:"phoneTollFree"`
	Provider         pulumi.StringPtrInput `pulumi:"provider"`
	ProvidersWebsite pulumi.StringPtrInput `pulumi:"providersWebsite"`
}

func (ContactInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactInformation)(nil)).Elem()
}

func (i ContactInformationArgs) ToContactInformationOutput() ContactInformationOutput {
	return i.ToContactInformationOutputWithContext(context.Background())
}

func (i ContactInformationArgs) ToContactInformationOutputWithContext(ctx context.Context) ContactInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInformationOutput)
}

func (i ContactInformationArgs) ToContactInformationPtrOutput() ContactInformationPtrOutput {
	return i.ToContactInformationPtrOutputWithContext(context.Background())
}

func (i ContactInformationArgs) ToContactInformationPtrOutputWithContext(ctx context.Context) ContactInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInformationOutput).ToContactInformationPtrOutputWithContext(ctx)
}

// ContactInformationPtrInput is an input type that accepts ContactInformationArgs, ContactInformationPtr and ContactInformationPtrOutput values.
// You can construct a concrete instance of `ContactInformationPtrInput` via:
//
//	        ContactInformationArgs{...}
//
//	or:
//
//	        nil
type ContactInformationPtrInput interface {
	pulumi.Input

	ToContactInformationPtrOutput() ContactInformationPtrOutput
	ToContactInformationPtrOutputWithContext(context.Context) ContactInformationPtrOutput
}

type contactInformationPtrType ContactInformationArgs

func ContactInformationPtr(v *ContactInformationArgs) ContactInformationPtrInput {
	return (*contactInformationPtrType)(v)
}

func (*contactInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactInformation)(nil)).Elem()
}

func (i *contactInformationPtrType) ToContactInformationPtrOutput() ContactInformationPtrOutput {
	return i.ToContactInformationPtrOutputWithContext(context.Background())
}

func (i *contactInformationPtrType) ToContactInformationPtrOutputWithContext(ctx context.Context) ContactInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContactInformationPtrOutput)
}

type ContactInformationOutput struct{ *pulumi.OutputState }

func (ContactInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContactInformation)(nil)).Elem()
}

func (o ContactInformationOutput) ToContactInformationOutput() ContactInformationOutput {
	return o
}

func (o ContactInformationOutput) ToContactInformationOutputWithContext(ctx context.Context) ContactInformationOutput {
	return o
}

func (o ContactInformationOutput) ToContactInformationPtrOutput() ContactInformationPtrOutput {
	return o.ToContactInformationPtrOutputWithContext(context.Background())
}

func (o ContactInformationOutput) ToContactInformationPtrOutputWithContext(ctx context.Context) ContactInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContactInformation) *ContactInformation {
		return &v
	}).(ContactInformationPtrOutput)
}

func (o ContactInformationOutput) PhoneLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInformation) *string { return v.PhoneLocal }).(pulumi.StringPtrOutput)
}

func (o ContactInformationOutput) PhoneTollFree() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInformation) *string { return v.PhoneTollFree }).(pulumi.StringPtrOutput)
}

func (o ContactInformationOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInformation) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

func (o ContactInformationOutput) ProvidersWebsite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContactInformation) *string { return v.ProvidersWebsite }).(pulumi.StringPtrOutput)
}

type ContactInformationPtrOutput struct{ *pulumi.OutputState }

func (ContactInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContactInformation)(nil)).Elem()
}

func (o ContactInformationPtrOutput) ToContactInformationPtrOutput() ContactInformationPtrOutput {
	return o
}

func (o ContactInformationPtrOutput) ToContactInformationPtrOutputWithContext(ctx context.Context) ContactInformationPtrOutput {
	return o
}

func (o ContactInformationPtrOutput) Elem() ContactInformationOutput {
	return o.ApplyT(func(v *ContactInformation) ContactInformation {
		if v != nil {
			return *v
		}
		var ret ContactInformation
		return ret
	}).(ContactInformationOutput)
}

func (o ContactInformationPtrOutput) PhoneLocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInformation) *string {
		if v == nil {
			return nil
		}
		return v.PhoneLocal
	}).(pulumi.StringPtrOutput)
}

func (o ContactInformationPtrOutput) PhoneTollFree() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInformation) *string {
		if v == nil {
			return nil
		}
		return v.PhoneTollFree
	}).(pulumi.StringPtrOutput)
}

func (o ContactInformationPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInformation) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

func (o ContactInformationPtrOutput) ProvidersWebsite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContactInformation) *string {
		if v == nil {
			return nil
		}
		return v.ProvidersWebsite
	}).(pulumi.StringPtrOutput)
}

type Smtp struct {
	AuthMethod *string `pulumi:"authMethod"`
	Password   *string `pulumi:"password"`
	PortNumber *string `pulumi:"portNumber"`
	Security   *string `pulumi:"security"`
	SmtpServer *string `pulumi:"smtpServer"`
	Username   *string `pulumi:"username"`
}

// SmtpInput is an input type that accepts SmtpArgs and SmtpOutput values.
// You can construct a concrete instance of `SmtpInput` via:
//
//	SmtpArgs{...}
type SmtpInput interface {
	pulumi.Input

	ToSmtpOutput() SmtpOutput
	ToSmtpOutputWithContext(context.Context) SmtpOutput
}

type SmtpArgs struct {
	AuthMethod pulumi.StringPtrInput `pulumi:"authMethod"`
	Password   pulumi.StringPtrInput `pulumi:"password"`
	PortNumber pulumi.StringPtrInput `pulumi:"portNumber"`
	Security   pulumi.StringPtrInput `pulumi:"security"`
	SmtpServer pulumi.StringPtrInput `pulumi:"smtpServer"`
	Username   pulumi.StringPtrInput `pulumi:"username"`
}

func (SmtpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Smtp)(nil)).Elem()
}

func (i SmtpArgs) ToSmtpOutput() SmtpOutput {
	return i.ToSmtpOutputWithContext(context.Background())
}

func (i SmtpArgs) ToSmtpOutputWithContext(ctx context.Context) SmtpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpOutput)
}

func (i SmtpArgs) ToSmtpPtrOutput() SmtpPtrOutput {
	return i.ToSmtpPtrOutputWithContext(context.Background())
}

func (i SmtpArgs) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpOutput).ToSmtpPtrOutputWithContext(ctx)
}

// SmtpPtrInput is an input type that accepts SmtpArgs, SmtpPtr and SmtpPtrOutput values.
// You can construct a concrete instance of `SmtpPtrInput` via:
//
//	        SmtpArgs{...}
//
//	or:
//
//	        nil
type SmtpPtrInput interface {
	pulumi.Input

	ToSmtpPtrOutput() SmtpPtrOutput
	ToSmtpPtrOutputWithContext(context.Context) SmtpPtrOutput
}

type smtpPtrType SmtpArgs

func SmtpPtr(v *SmtpArgs) SmtpPtrInput {
	return (*smtpPtrType)(v)
}

func (*smtpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Smtp)(nil)).Elem()
}

func (i *smtpPtrType) ToSmtpPtrOutput() SmtpPtrOutput {
	return i.ToSmtpPtrOutputWithContext(context.Background())
}

func (i *smtpPtrType) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SmtpPtrOutput)
}

type SmtpOutput struct{ *pulumi.OutputState }

func (SmtpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Smtp)(nil)).Elem()
}

func (o SmtpOutput) ToSmtpOutput() SmtpOutput {
	return o
}

func (o SmtpOutput) ToSmtpOutputWithContext(ctx context.Context) SmtpOutput {
	return o
}

func (o SmtpOutput) ToSmtpPtrOutput() SmtpPtrOutput {
	return o.ToSmtpPtrOutputWithContext(context.Background())
}

func (o SmtpOutput) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Smtp) *Smtp {
		return &v
	}).(SmtpPtrOutput)
}

func (o SmtpOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.AuthMethod }).(pulumi.StringPtrOutput)
}

func (o SmtpOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SmtpOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.PortNumber }).(pulumi.StringPtrOutput)
}

func (o SmtpOutput) Security() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.Security }).(pulumi.StringPtrOutput)
}

func (o SmtpOutput) SmtpServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.SmtpServer }).(pulumi.StringPtrOutput)
}

func (o SmtpOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Smtp) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SmtpPtrOutput struct{ *pulumi.OutputState }

func (SmtpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Smtp)(nil)).Elem()
}

func (o SmtpPtrOutput) ToSmtpPtrOutput() SmtpPtrOutput {
	return o
}

func (o SmtpPtrOutput) ToSmtpPtrOutputWithContext(ctx context.Context) SmtpPtrOutput {
	return o
}

func (o SmtpPtrOutput) Elem() SmtpOutput {
	return o.ApplyT(func(v *Smtp) Smtp {
		if v != nil {
			return *v
		}
		var ret Smtp
		return ret
	}).(SmtpOutput)
}

func (o SmtpPtrOutput) AuthMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.AuthMethod
	}).(pulumi.StringPtrOutput)
}

func (o SmtpPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o SmtpPtrOutput) PortNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.PortNumber
	}).(pulumi.StringPtrOutput)
}

func (o SmtpPtrOutput) Security() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.Security
	}).(pulumi.StringPtrOutput)
}

func (o SmtpPtrOutput) SmtpServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.SmtpServer
	}).(pulumi.StringPtrOutput)
}

func (o SmtpPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Smtp) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContactInformationInput)(nil)).Elem(), ContactInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContactInformationPtrInput)(nil)).Elem(), ContactInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmtpInput)(nil)).Elem(), SmtpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SmtpPtrInput)(nil)).Elem(), SmtpArgs{})
	pulumi.RegisterOutputType(ContactInformationOutput{})
	pulumi.RegisterOutputType(ContactInformationPtrOutput{})
	pulumi.RegisterOutputType(SmtpOutput{})
	pulumi.RegisterOutputType(SmtpPtrOutput{})
}
