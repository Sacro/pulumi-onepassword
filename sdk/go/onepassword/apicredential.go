// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type APICredential struct {
	pulumi.CustomResourceState

	Category   pulumi.StringOutput    `pulumi:"category"`
	Credential pulumi.StringPtrOutput `pulumi:"credential"`
	Expires    pulumi.StringPtrOutput `pulumi:"expires"`
	Fields     GetFieldArrayOutput    `pulumi:"fields"`
	Filename   pulumi.StringPtrOutput `pulumi:"filename"`
	Hostname   pulumi.StringPtrOutput `pulumi:"hostname"`
	Id         pulumi.StringOutput    `pulumi:"id"`
	Notes      pulumi.StringPtrOutput `pulumi:"notes"`
	Sections   GetSectionArrayOutput  `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The title of the item.
	Title    pulumi.StringOutput    `pulumi:"title"`
	Type     pulumi.StringPtrOutput `pulumi:"type"`
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// The UUID of the item to retrieve. This field will be populated with the UUID of the item if the item it looked up by its title.
	Uuid      pulumi.StringOutput    `pulumi:"uuid"`
	ValidFrom pulumi.StringPtrOutput `pulumi:"validFrom"`
	// The UUID of the vault the item is in.
	Vault pulumi.StringOutput `pulumi:"vault"`
}

// NewAPICredential registers a new resource with the given unique name, arguments, and options.
func NewAPICredential(ctx *pulumi.Context,
	name string, args *APICredentialArgs, opts ...pulumi.ResourceOption) (*APICredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	if args.Vault == nil {
		return nil, errors.New("invalid value for required argument 'Vault'")
	}
	if isZero(args.Category) {
		args.Category = pulumi.String("Item")
	}
	var resource APICredential
	err := ctx.RegisterResource("onepassword:index:APICredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAPICredential gets an existing APICredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAPICredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *APICredentialState, opts ...pulumi.ResourceOption) (*APICredential, error) {
	var resource APICredential
	err := ctx.ReadResource("onepassword:index:APICredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering APICredential resources.
type apicredentialState struct {
}

type APICredentialState struct {
}

func (APICredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*apicredentialState)(nil)).Elem()
}

type apicredentialArgs struct {
	Category   string    `pulumi:"category"`
	Credential *string   `pulumi:"credential"`
	Expires    *string   `pulumi:"expires"`
	Fields     []Field   `pulumi:"fields"`
	Filename   *string   `pulumi:"filename"`
	Hostname   *string   `pulumi:"hostname"`
	Notes      *string   `pulumi:"notes"`
	Sections   []Section `pulumi:"sections"`
	// An array of strings of the tags assigned to the item.
	Tags []string `pulumi:"tags"`
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title     string  `pulumi:"title"`
	Type      *string `pulumi:"type"`
	Username  *string `pulumi:"username"`
	ValidFrom *string `pulumi:"validFrom"`
	// The UUID of the vault the item is in.
	Vault string `pulumi:"vault"`
}

// The set of arguments for constructing a APICredential resource.
type APICredentialArgs struct {
	Category   pulumi.StringInput
	Credential pulumi.StringPtrInput
	Expires    pulumi.StringPtrInput
	Fields     FieldArrayInput
	Filename   pulumi.StringPtrInput
	Hostname   pulumi.StringPtrInput
	Notes      pulumi.StringPtrInput
	Sections   SectionArrayInput
	// An array of strings of the tags assigned to the item.
	Tags pulumi.StringArrayInput
	// The title of the item to retrieve. This field will be populated with the title of the item if the item it looked up by its UUID.
	Title     pulumi.StringInput
	Type      pulumi.StringPtrInput
	Username  pulumi.StringPtrInput
	ValidFrom pulumi.StringPtrInput
	// The UUID of the vault the item is in.
	Vault pulumi.StringInput
}

func (APICredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apicredentialArgs)(nil)).Elem()
}

type APICredentialInput interface {
	pulumi.Input

	ToAPICredentialOutput() APICredentialOutput
	ToAPICredentialOutputWithContext(ctx context.Context) APICredentialOutput
}

func (*APICredential) ElementType() reflect.Type {
	return reflect.TypeOf((**APICredential)(nil)).Elem()
}

func (i *APICredential) ToAPICredentialOutput() APICredentialOutput {
	return i.ToAPICredentialOutputWithContext(context.Background())
}

func (i *APICredential) ToAPICredentialOutputWithContext(ctx context.Context) APICredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APICredentialOutput)
}

// APICredentialArrayInput is an input type that accepts APICredentialArray and APICredentialArrayOutput values.
// You can construct a concrete instance of `APICredentialArrayInput` via:
//
//	APICredentialArray{ APICredentialArgs{...} }
type APICredentialArrayInput interface {
	pulumi.Input

	ToAPICredentialArrayOutput() APICredentialArrayOutput
	ToAPICredentialArrayOutputWithContext(context.Context) APICredentialArrayOutput
}

type APICredentialArray []APICredentialInput

func (APICredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*APICredential)(nil)).Elem()
}

func (i APICredentialArray) ToAPICredentialArrayOutput() APICredentialArrayOutput {
	return i.ToAPICredentialArrayOutputWithContext(context.Background())
}

func (i APICredentialArray) ToAPICredentialArrayOutputWithContext(ctx context.Context) APICredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APICredentialArrayOutput)
}

// APICredentialMapInput is an input type that accepts APICredentialMap and APICredentialMapOutput values.
// You can construct a concrete instance of `APICredentialMapInput` via:
//
//	APICredentialMap{ "key": APICredentialArgs{...} }
type APICredentialMapInput interface {
	pulumi.Input

	ToAPICredentialMapOutput() APICredentialMapOutput
	ToAPICredentialMapOutputWithContext(context.Context) APICredentialMapOutput
}

type APICredentialMap map[string]APICredentialInput

func (APICredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*APICredential)(nil)).Elem()
}

func (i APICredentialMap) ToAPICredentialMapOutput() APICredentialMapOutput {
	return i.ToAPICredentialMapOutputWithContext(context.Background())
}

func (i APICredentialMap) ToAPICredentialMapOutputWithContext(ctx context.Context) APICredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(APICredentialMapOutput)
}

type APICredentialOutput struct{ *pulumi.OutputState }

func (APICredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**APICredential)(nil)).Elem()
}

func (o APICredentialOutput) ToAPICredentialOutput() APICredentialOutput {
	return o
}

func (o APICredentialOutput) ToAPICredentialOutputWithContext(ctx context.Context) APICredentialOutput {
	return o
}

type APICredentialArrayOutput struct{ *pulumi.OutputState }

func (APICredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*APICredential)(nil)).Elem()
}

func (o APICredentialArrayOutput) ToAPICredentialArrayOutput() APICredentialArrayOutput {
	return o
}

func (o APICredentialArrayOutput) ToAPICredentialArrayOutputWithContext(ctx context.Context) APICredentialArrayOutput {
	return o
}

func (o APICredentialArrayOutput) Index(i pulumi.IntInput) APICredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *APICredential {
		return vs[0].([]*APICredential)[vs[1].(int)]
	}).(APICredentialOutput)
}

type APICredentialMapOutput struct{ *pulumi.OutputState }

func (APICredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*APICredential)(nil)).Elem()
}

func (o APICredentialMapOutput) ToAPICredentialMapOutput() APICredentialMapOutput {
	return o
}

func (o APICredentialMapOutput) ToAPICredentialMapOutputWithContext(ctx context.Context) APICredentialMapOutput {
	return o
}

func (o APICredentialMapOutput) MapIndex(k pulumi.StringInput) APICredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *APICredential {
		return vs[0].(map[string]*APICredential)[vs[1].(string)]
	}).(APICredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*APICredentialInput)(nil)).Elem(), &APICredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*APICredentialArrayInput)(nil)).Elem(), APICredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*APICredentialMapInput)(nil)).Elem(), APICredentialMap{})
	pulumi.RegisterOutputType(APICredentialOutput{})
	pulumi.RegisterOutputType(APICredentialArrayOutput{})
	pulumi.RegisterOutputType(APICredentialMapOutput{})
}
