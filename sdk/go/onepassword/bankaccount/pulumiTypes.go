// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bankaccount

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BranchInformation struct {
	Address *string `pulumi:"address"`
	Phone   *string `pulumi:"phone"`
}

// BranchInformationInput is an input type that accepts BranchInformationArgs and BranchInformationOutput values.
// You can construct a concrete instance of `BranchInformationInput` via:
//
//	BranchInformationArgs{...}
type BranchInformationInput interface {
	pulumi.Input

	ToBranchInformationOutput() BranchInformationOutput
	ToBranchInformationOutputWithContext(context.Context) BranchInformationOutput
}

type BranchInformationArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	Phone   pulumi.StringPtrInput `pulumi:"phone"`
}

func (BranchInformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchInformation)(nil)).Elem()
}

func (i BranchInformationArgs) ToBranchInformationOutput() BranchInformationOutput {
	return i.ToBranchInformationOutputWithContext(context.Background())
}

func (i BranchInformationArgs) ToBranchInformationOutputWithContext(ctx context.Context) BranchInformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchInformationOutput)
}

func (i BranchInformationArgs) ToBranchInformationPtrOutput() BranchInformationPtrOutput {
	return i.ToBranchInformationPtrOutputWithContext(context.Background())
}

func (i BranchInformationArgs) ToBranchInformationPtrOutputWithContext(ctx context.Context) BranchInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchInformationOutput).ToBranchInformationPtrOutputWithContext(ctx)
}

// BranchInformationPtrInput is an input type that accepts BranchInformationArgs, BranchInformationPtr and BranchInformationPtrOutput values.
// You can construct a concrete instance of `BranchInformationPtrInput` via:
//
//	        BranchInformationArgs{...}
//
//	or:
//
//	        nil
type BranchInformationPtrInput interface {
	pulumi.Input

	ToBranchInformationPtrOutput() BranchInformationPtrOutput
	ToBranchInformationPtrOutputWithContext(context.Context) BranchInformationPtrOutput
}

type branchInformationPtrType BranchInformationArgs

func BranchInformationPtr(v *BranchInformationArgs) BranchInformationPtrInput {
	return (*branchInformationPtrType)(v)
}

func (*branchInformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchInformation)(nil)).Elem()
}

func (i *branchInformationPtrType) ToBranchInformationPtrOutput() BranchInformationPtrOutput {
	return i.ToBranchInformationPtrOutputWithContext(context.Background())
}

func (i *branchInformationPtrType) ToBranchInformationPtrOutputWithContext(ctx context.Context) BranchInformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchInformationPtrOutput)
}

type BranchInformationOutput struct{ *pulumi.OutputState }

func (BranchInformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BranchInformation)(nil)).Elem()
}

func (o BranchInformationOutput) ToBranchInformationOutput() BranchInformationOutput {
	return o
}

func (o BranchInformationOutput) ToBranchInformationOutputWithContext(ctx context.Context) BranchInformationOutput {
	return o
}

func (o BranchInformationOutput) ToBranchInformationPtrOutput() BranchInformationPtrOutput {
	return o.ToBranchInformationPtrOutputWithContext(context.Background())
}

func (o BranchInformationOutput) ToBranchInformationPtrOutputWithContext(ctx context.Context) BranchInformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BranchInformation) *BranchInformation {
		return &v
	}).(BranchInformationPtrOutput)
}

func (o BranchInformationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchInformation) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o BranchInformationOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BranchInformation) *string { return v.Phone }).(pulumi.StringPtrOutput)
}

type BranchInformationPtrOutput struct{ *pulumi.OutputState }

func (BranchInformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BranchInformation)(nil)).Elem()
}

func (o BranchInformationPtrOutput) ToBranchInformationPtrOutput() BranchInformationPtrOutput {
	return o
}

func (o BranchInformationPtrOutput) ToBranchInformationPtrOutputWithContext(ctx context.Context) BranchInformationPtrOutput {
	return o
}

func (o BranchInformationPtrOutput) Elem() BranchInformationOutput {
	return o.ApplyT(func(v *BranchInformation) BranchInformation {
		if v != nil {
			return *v
		}
		var ret BranchInformation
		return ret
	}).(BranchInformationOutput)
}

func (o BranchInformationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BranchInformation) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o BranchInformationPtrOutput) Phone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BranchInformation) *string {
		if v == nil {
			return nil
		}
		return v.Phone
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BranchInformationInput)(nil)).Elem(), BranchInformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchInformationPtrInput)(nil)).Elem(), BranchInformationArgs{})
	pulumi.RegisterOutputType(BranchInformationOutput{})
	pulumi.RegisterOutputType(BranchInformationPtrOutput{})
}
