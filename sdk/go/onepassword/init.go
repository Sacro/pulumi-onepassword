// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "onepassword:index:APICredential":
		r = &APICredential{}
	case "onepassword:index:BankAccount":
		r = &BankAccount{}
	case "onepassword:index:CreditCard":
		r = &CreditCard{}
	case "onepassword:index:CryptoWallet":
		r = &CryptoWallet{}
	case "onepassword:index:Database":
		r = &Database{}
	case "onepassword:index:Document":
		r = &Document{}
	case "onepassword:index:DriverLicense":
		r = &DriverLicense{}
	case "onepassword:index:EmailAccount":
		r = &EmailAccount{}
	case "onepassword:index:Identity":
		r = &Identity{}
	case "onepassword:index:Item":
		r = &Item{}
	case "onepassword:index:Login":
		r = &Login{}
	case "onepassword:index:MedicalRecord":
		r = &MedicalRecord{}
	case "onepassword:index:Membership":
		r = &Membership{}
	case "onepassword:index:OutdoorLicense":
		r = &OutdoorLicense{}
	case "onepassword:index:Passport":
		r = &Passport{}
	case "onepassword:index:Password":
		r = &Password{}
	case "onepassword:index:RewardProgram":
		r = &RewardProgram{}
	case "onepassword:index:SSHKey":
		r = &SSHKey{}
	case "onepassword:index:SecureNote":
		r = &SecureNote{}
	case "onepassword:index:Server":
		r = &Server{}
	case "onepassword:index:SocialSecurityNumber":
		r = &SocialSecurityNumber{}
	case "onepassword:index:SoftwareLicense":
		r = &SoftwareLicense{}
	case "onepassword:index:WirelessRouter":
		r = &WirelessRouter{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:onepassword" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"onepassword",
		"index",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"onepassword",
		&pkg{version},
	)
}
