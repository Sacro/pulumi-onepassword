// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Passport extends pulumi.CustomResource {
    /**
     * Get an existing Passport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Passport {
        return new Passport(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'onepassword:index:Passport';

    /**
     * Returns true if the given object is an instance of Passport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Passport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Passport.__pulumiType;
    }


    /**
     * Create a Passport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: PassportArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["dateOfBirth"] = args ? args.dateOfBirth : undefined;
            resourceInputs["expiryDate"] = args ? args.expiryDate : undefined;
            resourceInputs["fullName"] = args ? args.fullName : undefined;
            resourceInputs["gender"] = args ? args.gender : undefined;
            resourceInputs["issuedOn"] = args ? args.issuedOn : undefined;
            resourceInputs["issuingAuthority"] = args ? args.issuingAuthority : undefined;
            resourceInputs["issuingCountry"] = args ? args.issuingCountry : undefined;
            resourceInputs["nationality"] = args ? args.nationality : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["number"] = args ? args.number : undefined;
            resourceInputs["placeOfBirth"] = args ? args.placeOfBirth : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        } else {
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Passport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Passport resource.
 */
export interface PassportArgs {
    dateOfBirth?: pulumi.Input<string>;
    expiryDate?: pulumi.Input<string>;
    fullName?: pulumi.Input<string>;
    gender?: pulumi.Input<string>;
    issuedOn?: pulumi.Input<string>;
    issuingAuthority?: pulumi.Input<string>;
    issuingCountry?: pulumi.Input<string>;
    nationality?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    number?: pulumi.Input<string>;
    placeOfBirth?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}
